I".<p>This is part of a series of posts breaking down visual effects using CSS filters and blend modes. Read <a href="/vintage-washout">Part 1: The Vintage Washout Effect</a>, <a href="/3d-effect">Part 2: 3d Glasses</a>, <a href="/vignettes">Part 3: Vignettes</a>, and <a href="/bokeh">Part 4: Bokeh Textures</a> for some background on blend modes and filters. In this post we‚Äôll explore a relatively new photography technique founded in Austria in the early 90‚Äôs, called Lomography.</p>

<p><br /></p>

<p><img src="../images/posts/css-effects/5/lomo-search.png" alt="" /></p>
<div class="caption">A Google search for Lomography yields beautifully vibrant results.</div>

<h2 id="a-little-background-on-lomography">A Little Background on Lomography</h2>

<p>Lomography (AKA Lomo) was based on and inspired by a cheap Russian toy camera, the Lomo LC-A. These photos are often high contrast with vignettes and soft focus. The original lomo cameras are the LC-A, Holga, Fisheye, Colorsplash and Supersampler <sup><a href="http://www.1stwebdesigner.com/what-is-lomography/">1</a></sup>. These cameras were originally considered ‚Äúlow quality‚Äù and created distorted images.</p>

<p>So, <strong>Lomography is very saturated, sometimes blurred, and contains unexpected light leaks.</strong> Hmm.. these all sound suspiciously like things we can do in CSS!</p>

<h2 id="playing-with-filters">Playing with Filters</h2>

<p>A common trait in Lomography is vibrant, saturated colors. We can easily tackle this with CSS filters. So, let‚Äôs turn our <code>filter: saturate() contrast()</code> game up.</p>

<p>Following Lomography principles of not over-thinking image composition and capturing real life, I may or may not have taken this sample photo in the bathroom of the coffee shop from which I am writing this post. With a little bit of saturation and contrast (and a hue-rotate, because, ‚Äúwhy not?‚Äù), it already looks much more vibrant and Lomo.</p>

<style type="text/css">
  .lomo-1 {
    -webkit-filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg);
    filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg);
  }
</style>

<figure class="half--left">
  <img src="../images/posts/css-effects/5/sample.jpg" />
  <p class="caption">Original Image</p>
</figure>
<figure class="half--right">
  <img class="lomo-1" src="../images/posts/css-effects/5/sample.jpg" />
  <p class="caption"><code>filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg);</code></p>
</figure>
<div class="clearfix"></div>

<h2 id="blur-within-the-lines">Blur within the lines</h2>

<p>Blur is another common feature in Lomography. We can use the <code>blur()</code> filter in CSS to achieve this effect. Blur accepts any unit value (em, px, pt, rem, etc.) but you‚Äôll probably want to keep the blur very gentle and light for this effect. Less than <code>1px</code> should be fine, but to represent what‚Äôs happening here, I will use <code>5px</code>.</p>

<figure class="right">
  <img src="../images/posts/css-effects/5/blur--bluredge.png" />
  <p style="margin-top: -2em; float: right" class="caption"><a href="http://roaminghunger.com/img/trucks/original/546ce4c6-9fb4-4e6f-bba1-427746204482.jpg">Image Source</a></p>
</figure>

<p>If we just apply <code>filter: blur(5px)</code> to an image, the borders also blur, as you can see in this image to the left. To prevent this, we‚Äôll want to wrap that image in a <code>&lt;figure&gt;</code> element:</p>

<pre><code class="language-html">&lt;figure&gt;
  &lt;img src="yummy.jpg"/&gt;
&lt;/figure&gt;
</code></pre>

<p>Once we‚Äôve done that, we can position the <code>&lt;img&gt;</code> within that <code>&lt;figure&gt;</code> to prevent blurry overflow:</p>

<figure class="half--left">
  <img src="../images/posts/css-effects/5/blur--cleanedge.png" />
</figure>
<div class="half--right">
<pre><code>
img {
  filter: blur(5px);
  /* image is wider than
  // figure to compensate
  // for the blur: */
  width: 102%;
  margin: -1%;
}

figure {
  overflow: hidden;
  /* desired image size: */
  max-width: 300px;
}
</code></pre>
</div>

<div class="clearfix"></div>

<p>Let‚Äôs see what <code>filter: blur(.5px)</code> looks like with our original image (in addition to the other filters applied):</p>

<style type="text/css">
  .lomo-2 img {
  -webkit-filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg) blur(.5px);
  filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg) blur(.5px);
  width: 102%;
  margin: -1%;
}

  .lomo-2 {
    overflow: hidden;
    max-width: 100%;
  }
</style>

<figure class="lomo-2">
  <img src="../images/posts/css-effects/5/sample.jpg" />
</figure>

<h2 id="light-leaks">Light Leaks</h2>

<p>Things can get really fun with colored light leaks ‚Äî and CSS gradients are the perfect vessel with which to create them! I would recommend checking out some of my earlier posts from this series and also <a href="http://www.quirksmode.org/css/images/position.html">this</a> article for an overview of gradient positioning.</p>

<p>I decided to use some yellow and hotpink circles which look like this:</p>

<figure class="gradients-visual left">
</figure>

<p>The really useful thing about gradients is that <em>you can specify their size and position, as well as apply an unlimited number of them</em>. (<strong>Note:</strong> watch out for performance concerns when using many CSS gradients).</p>

<p>In the example, I am using two gradients within a pseudo-element background. <strong>Note:</strong> I‚Äôm using <code>rgba(255,255,255,0)</code> instead of just using the keyword <code>transparent</code> because there are rendering problems with <code>transparent</code> on some browsers, where they interpret it as <code>rgba(0,0,0,0)</code>, causing dark circles to appear as the gradient attempts to blend black transparent instead of white transparent with the other colors specified <sup><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Using_CSS_gradients">2</a></sup>.</p>

<pre><code>background:
  radial-gradient(500px circle at 30% 10%, yellow, rgba(255,255,255,0)),
  radial-gradient(300px circle at 80% 60%, deeppink, rgba(255,255,255,0));
</code></pre>

<p>When we apply the background above with a <code>mix-blend-mode: overlay</code> to our sample image, it looks pretty cool:</p>

<style>
  .lomo-3 img {
  -webkit-filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg) blur(.5px);
  filter: saturate(1.5) contrast(1.5) hue-rotate(-15deg) blur(.5px);
  width: 102%;
  margin: -1%;
}

  .lomo-3 {
    overflow: hidden;
    max-width: 100%;
    position: relative;
  }

  .lomo-3:after {
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    display: block;
    top: 0; left: 0;
    background: radial-gradient(500px circle at 30% 10%, yellow, rgba(255,255,255,0)), radial-gradient(300px circle at 80% 60%, deeppink, rgba(255,255,255,0));
    mix-blend-mode: overlay;
  }

  .gradients-visual {
    display: block;
    overflow: hidden;
    background: radial-gradient(300px circle at 30% 10%, yellow, rgba(0,0,0,0)), radial-gradient(200px circle at 80% 60%, deeppink, rgba(0,0,0,0));
    width: 50%;
    height: 300px;
  }
</style>

<figure class="lomo-3">
  <img src="../images/posts/css-effects/5/sample.jpg" />
</figure>

<p>Here‚Äôs the same effect on another image I randomly took in this place:</p>

<figure class="lomo-3">
  <img src="../images/posts/css-effects/5/sample-2.jpg" />
</figure>

<h2 id="double-exposure">Double Exposure</h2>

<figure class="right">
  <img src="../images/posts/css-effects/5/dbl-exposure.jpg" />
</figure>
<p><br />
Another popular Lomography technique is double-exposing images (overlaying them on top of each other). This would happen with film if you shot the roll and then (usually by mistake) kept shooting photographs on it, causing you to create two images on the spot in the reel.</p>

<div class="clearfix"></div>

<figure class="left" style="max-width: 460px">
  <img src="../images/posts/css-effects/5/multiply.gif" />
  <p class="caption">Image taken from my <a href="https://www.youtube.com/watch?v=LY65F2e4B5w">talk</a> on CSS Image Effects.</p>
</figure>

<p>This effect is super easy to create with blend modes, particularly the <strong>multiply</strong> blend mode, which works pretty similarly to transparencies. In this gif, the <code>multiply</code> blend mode is being applied to the image of vanilla ice cream ‚Äî overlaid like a transparency on top of the image of vanilla ice. The lighter pixels (by luminosity) become transparent, and the darker pixels are overlaid.</p>

<p>But multiply isn‚Äôt the only blend mode that works here! Let‚Äôs see what happens when we double-expose our test images with <code>overlay</code> and tone down the saturation a bit:</p>

<div class="clearfix"></div>

<style>
  .overlay {
    mix-blend-mode: overlay;
    position: absolute;
    top: 0;
    left: 0;
    opacity .6;
  }

  .overlayed {
    opacity: .4;
  }

  .overlay-section {
    overflow: hidden;
    position: relative;
    -webkit-filter: saturate(.7);
    filter: saturate(.7);
  }
</style>

<figure class="lomo-3 overlay-section">
  <img class="overlayed" src="../images/posts/css-effects/5/sample.jpg" />
  <img class="overlay" src="../images/posts/css-effects/5/sample-2.jpg" />
</figure>
<p class="caption">Okay, so maybe there's still way too much craziness going on in there, but you get the idea.</p>

<h2 id="mixing-styles">Mixing Styles</h2>

<p>Here‚Äôs a better example. Remember the post about <a href="/3d-effect">Anaglyphs</a> from a little while back? Well when I was playing around with some of these effects when writing that post, and made a little ‚Äúmistake‚Äù that I loved so much that I called it <em>‚ÄúAccidental Cool Effect 2.‚Äù</em> And now I‚Äôm sharing it:</p>

<p data-height="480" data-theme-id="5255" data-slug-hash="ojZwRL" data-default-tab="result" data-user="una" class="codepen">See the Pen <a href="http://codepen.io/una/pen/ojZwRL/">Accidental cool effect 2</a> by Una Kravets (<a href="http://codepen.io/una">@una</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async="" src="//assets.codepen.io/assets/embed/ei.js"></script>

<p><br /></p>

<p>Messing around with color, image layering, and blend modes unabashedly is quiet honestly the best way to stumble upon interesting image effects. Within the browser, it‚Äôs really quick and easy to do this! I use Google Chrome Developer Tools a <strong>lot</strong> to discover interesting combinations, which allow me to see the changes in real time and help guide decisions (which are difficult to pin down when there are so many different ways to get a nice Lomography effect). Some notable Dev Tools features for this type of experimentation include the ability to pick color from the page and color palettes:</p>

<p>&lt;img class=‚Äùhalf‚Äìleft‚Äùsrc=‚Äù../images/posts/css-effects/5/devtools-colorpicker.jpg‚Äù&gt;
&lt;img class=‚Äùhalf‚Äìright‚Äùsrc=‚Äù../images/posts/css-effects/5/devtools-palettes.png‚Äù&gt;</p>

<div class="clearfix"></div>

<p>I highly recommend having the Developer Tools panel open while playing around with image effects because you never know what happy accidents will happen!</p>

<p><strong>tl;dr: Lomography effects can be achieved in browser with a mixture of techniques.</strong></p>

<section class="css-effects-series">
  <h2>More CSS Effects:</h2>
  <ul>
    <li><a href="/vintage-washout">Part 1: The Vintage Washout Effect</a></li>
    <li><a href="/3d-effect">Part 2: 3D Glasses Effect</a></li>
    <li><a href="/vignettes">Part 3: Vignettes in 3 Ways</a></li>
    <li><a href="/bokeh">Part 4: Bokeh Textures</a></li>
    <li><a href="/lomo">Part 5: Lomography Filters</a></li>
    <li><a href="/infrared">Part 6: Infrared Photo Effect</a></li>
  </ul>
</section>
:ET