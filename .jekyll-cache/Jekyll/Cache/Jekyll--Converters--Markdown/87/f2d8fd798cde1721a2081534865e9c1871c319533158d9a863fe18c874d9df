I"!<p>This is the final post in a series which breaks down visual effects using CSS filters and blend modes. Read <a href="/vintage-washout">Part 1: The Vintage Washout Effect</a>, <a href="/3d-effect">Part 2: 3d Glasses</a>, <a href="/vignettes">Part 3: Vignettes</a>, <a href="/bokeh">Part 4: Bokeh Textures</a>, and <a href="/lomo">Part 5: Lomography</a> for some background on blend modes and filters. Let’s end the series with something short and sweet that has a lot of impact for minimal lines of code: a faux infrared photo effect.</p>

<h2 id="infrared-photography">Infrared Photography</h2>

<p>Infrared photography captures light in a spectrum beyond what is visible to the human eye (light which lies between the visible spectrum and radio waves <sup><a href="http://photography.tutsplus.com/tutorials/creating-an-infrared-effect-using-photoshop--photo-6056">1</a></sup>). There is a special kind of film you can buy to capture this light and create some really stunning, surreal effects.</p>

<p><img src="../../images/posts/css-effects/6/infra1.jpg" alt="infrared image example" class="half--left" />
<img src="../../images/posts/css-effects/6/infra2.jpg" alt="infrared image example" class="half--right" /></p>

<div class="clearfix"></div>

<p>The key to the Infrared effect is actually a little photo hack, and we can fake it pretty easily in CSS. It basically comes down to 4 steps: <strong>Duplicate</strong>, <strong>Invert</strong>, <strong>Color Blend</strong>, and <strong>Play With Hue</strong>.</p>

<h2 id="step-1-duplicate">Step 1: Duplicate</h2>

<p>The first step is to duplicate your base image. This can be done with multiple elements or with pseudo elements. Remember, you can’t use pseudo elements on the <code>&lt;img&gt;</code> tag so you’ll either need to line up two images, or use the <code>&lt;figure&gt;</code> tag in this. If you’re using two images, you should technically be placing those two elements within a <code>&lt;figure&gt;</code> anyway, so I’m just going to be using a sole <code>&lt;figure&gt;</code> for this example.</p>

<pre><code class="language-html">&lt;!-- HTML --&gt;
&lt;figure class="creek--infra"&gt;&lt;/figure&gt;
</code></pre>

<h2 id="step-2-invert">Step 2: Invert</h2>

<p>Now, we will use <code>filter: invert</code> on only the top layer, so it will look a little bit like this <em>(this is a live effect, so you’ll only see it in a compatible browser)</em>:</p>

<style>
  .creek {
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    height: 200px;
    background-size: cover;
  }

  .creek--inverted {
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    -webkit-filter: invert();
    filter: invert();
    height: 200px;
    background-size: cover;
  }

  .creek--infra {
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    height: 400px;
    background-size: cover;
    position: relative;
  }

  .creek--infra:after {
    content: '';
    position: absolute;
    top:0; left:0;
    width: 100%;
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    -webkit-filter: invert();
      filter: invert(1);
    height: 400px;
    background-size: cover;
    mix-blend-mode: color;
  }

  .creek--infra-2 {
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    height: 400px;
    background-size: cover;
    position: relative;
  }

  .creek--infra-2:after {
    content: '';
    position: absolute;
    top:0; left:0;
    width: 100%;
    background-image: url('../../images/posts/css-effects/6/creek.jpg');
    -webkit-filter: invert(1) saturate(.75) hue-rotate(60deg);
    filter: invert(1) saturate(.75) hue-rotate(60deg);
    height: 400px;
    background-size: cover;
    mix-blend-mode: color;
  }
</style>

<div class="half--left">
  <figure class="creek"></figure>
  <p class="caption">original image</p>
</div>

<div class="half--right">
  <figure class="creek--inverted"></figure>
  <p class="caption">inverted image</p>
</div>

<h2 id="step-3-color-blend">Step 3: Color Blend</h2>

<p>So now, making sure these two are layered on top of one another, we will use <code>blend-mode: color</code> on the top image (the one which is inverted). <strong>This is where the magic happens!</strong> We’re colorizing our image with the inverse of itself! How meta!</p>

<figure class="creek--infra"></figure>

<p>The HTML is: <code>&lt;figure class="creek--infra"&gt;&lt;/figure&gt;</code> and the CSS code looks like this:</p>

<pre><code>.creek--infra {
  background-image: url('creek.jpg');
  height: 400px;
  background-size: cover;
  position: relative;
}

.creek--infra:after {
  content: '';
  position: absolute;
  top:0; left:0;
  width: 100%;
  background-image: url('creek.jpg');
  -webkit-filter: invert();
    filter: invert(1);
  height: 400px;
  background-size: cover;
  mix-blend-mode: color;
}
</code></pre>

<h2 id="play-with-hue">Play With Hue</h2>

<p>Now, this is a little vivid, so we may want to decrease the saturation a bit by setting <code>filter: saturate()</code> to a value less than 1. At the same time, we can use <code>filter: hue-rotate()</code> to play with the color.</p>

<figure class="creek--infra-2"></figure>

<p>The only difference in the image this time is that I’m using <code>filter: invert(1) saturate(.75) hue-rotate(60deg);</code> instead of only <code>filter: invert(1)</code> on the top layer. Pretty cool, right?</p>

<h2 id="mixin-time">Mixin Time!</h2>

<p>To make our lives easier, I made a little mixin to recreate this effect! You just specify <strong>image url</strong> and <strong>degree of hue-rotation</strong> when calling the mixin.</p>

<p>The <code>@mixin</code> looks like this:</p>

<pre><code>@mixin infrared($img, $deg: -60) {
  position: relative;
  background: url('#{$img}');
  background-size: cover;

  &amp;:after {
    background:  url('#{$img}');
    filter: invert(1) saturate(.75) hue-rotate(#{$deg}deg);
    mix-blend-mode: color;
    background-size: cover;
  }
}
</code></pre>

<p>And the usage of this <code>@mixin</code> would be:</p>

<pre><code>.creek-infra {
  @extend infrared('creek.jpg', 60);
}
</code></pre>

<p>Try out your own images and check out some more examples in this Codepen:</p>

<p data-height="580" data-theme-id="5255" data-slug-hash="ZbeJob" data-default-tab="result" data-user="una" class="codepen">See the Pen <a href="http://codepen.io/una/pen/ZbeJob/">Infrared Mixin</a> by Una Kravets (<a href="http://codepen.io/una">@una</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async="" src="//assets.codepen.io/assets/embed/ei.js"></script>

<p><strong>tl;dr: A faux infrared photo filter in CSS is just 4 steps: duplicate, invert, color-blend, and play with hue</strong></p>

<blockquote>
  <p>That’s it for the series! I hope you enjoyed it! Please share this and check out my other posts for more CSS image manipulation fun :)</p>
</blockquote>

<section class="css-effects-series">
  <h2>More CSS Effects:</h2>
  <ul>
    <li><a href="/vintage-washout">Part 1: The Vintage Washout Effect</a></li>
    <li><a href="/3d-effect">Part 2: 3D Glasses Effect</a></li>
    <li><a href="/vignettes">Part 3: Vignettes in 3 Ways</a></li>
    <li><a href="/bokeh">Part 4: Bokeh Textures</a></li>
    <li><a href="/lomo">Part 5: Lomography Filters</a></li>
    <li><a href="/infrared">Part 6: Infrared Photo Effect</a></li>
  </ul>
</section>
:ET